// Add this as a temporary Tauri command to insert test data

#[tauri::command]
async fn insert_test_prediction(
    db_state: State<'_, db::DbState>,
) -> Result<String, String> {
    use chrono::Utc;
    
    let pool = db_state.lock().await;
    
    let test_record = PredictionRecord {
        id: None,
        uuid: uuid::Uuid::new_v4().to_string(),
        port: "COM3".to_string(),
        baud_rate: 9600,
        collection_duration_ms: 5000,
        prediction_result: Some("Test Result".to_string()),
        confidence: Some(0.95),
        raw_response: Some(r#"{"probability": 0.95}"#.to_string()),
        status: "success".to_string(),
        error_message: None,
        created_at: Utc::now().to_rfc3339(),
        updated_at: Utc::now().to_rfc3339(),
    };
    
    let id = Database::insert_prediction(&*pool, &test_record).await?;
    Ok(format!("Inserted test prediction with id: {}", id))
}

// Then add to invoke_handler:
// insert_test_prediction,

